/** 
 * SARL-MASSIM - Interface between the SARL agent-oriented language 
 * and the MASSIM 2017 server
 * Copyright (C) 2017 The SARL-MASSIM Authors.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package au.edu.rmit.agtgrp.agtcity.sarl.mw.events

import au.edu.rmit.agtgrp.agtcity.sarl.mw.entities.AuctionJob
import au.edu.rmit.agtgrp.agtcity.sarl.mw.entities.Job
import au.edu.rmit.agtgrp.agtcity.sarl.mw.entities.RegularJob
import java.util.Set
import au.edu.rmit.agtgrp.agtcity.sarl.mw.entities.TeamJob
import au.edu.rmit.agtgrp.agtcity.sarl.mw.entities.MissionJob


/** 
 * JobPercept, emitted once per tick for every observed job. Superclass to all jobs
 * @param job - The job entity that was observed.
 */
event E_JobInfo extends E_AgentInfo {
	var job : Job

	new(sources : Set<String>, job : Job) {
		super(sources)
		this.job = job
	}
}

/** 
 * RegularJob, emitted once per tick for every observed Regular Job, inherited from Job.
 * @param regularJob - The RegularJob entity that was observed.
 */
event E_RegularJobInfo extends E_JobInfo {
	var regularJob : RegularJob

	new(sources : Set<String>, job : RegularJob) {
		super(sources, job)
		this.regularJob = job
	}
}

/** 
 * TeamJobPercept, emitted once per tick for every observed job posted by a team member..
 * @param teamJob - The teamJob entity that was observed.
 */
event E_TeamJobInfo extends E_JobInfo {
	var teamJob : TeamJob

	new(sources : Set<String>, job : TeamJob) {
		super(sources, job)
		this.teamJob = job
	}
}

/** 
 * ActionJobPercept, emitted once per tick for every observed Auction.
 * @param auctionJob - The auction job entity that was observed.
 */
event E_AuctionJobInfo extends E_JobInfo {
	var auctionJob : AuctionJob

	new(sources : Set<String>, job : AuctionJob) {
		super(sources, job)
		this.auctionJob = auctionJob
	}

}

/** 
 * MissionJobPercept, emitted once per tick for every observed mission posting.
 * @param missionJob - The MissionJob entity that was observed.
 */
event E_MissionJobInfo extends E_JobInfo {
	var missionJob : MissionJob 

	new(sources : Set<String>, missionJob : MissionJob) {
		super(sources, missionJob)
		this.missionJob = missionJob
	}

}


