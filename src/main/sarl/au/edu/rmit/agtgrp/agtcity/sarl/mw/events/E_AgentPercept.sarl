/** 
 * SARL-MASSIM - Interface between the SARL agent-oriented language 
 * and the MASSIM 2017 server
 * Copyright (C) 2017 The SARL-MASSIM Authors.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package au.edu.rmit.agtgrp.agtcity.sarl.mw.events

import java.util.Set
import massim.protocol.scenario.city.data.ActionData

/** 
 * E_AgentPercept superclass used to pass on all percepts from MASSIM. 
 * @param sources : a set of originating agents for a given percept 
 */
event E_AgentInfo {
	var sources : Set<String>	// the source of the percept

	new(sources : Set<String>) {
		this.sources = sources;
	}
}


/** 
 * TeamPercept emitted once per tick to notify all entities of current team status. 
 * @param monty, current team money. 
 */
event E_TeamInfo extends E_AgentInfo {
	var money : double

	new(sources : Set<String>, money : double) {
		super(sources);
		this.money = money;
	}
}


/** 
 * ActionStatusPercept emitted once per tick to notify an agent of it's action result from the previous tick. 
 * @param actionResult, object containing data relating to the previous action and it's result. 
 */
event E_ActionStatusInfo extends E_AgentInfo { 
	var actionData : ActionData

	new(sources : Set<String>, actionData : ActionData) {
		super(sources)
		this.actionData = actionData
	}
}

